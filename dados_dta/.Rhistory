## plots data for y1 by imputation
stripplot(contat_cov ~ .imp, data = imp_tot2, jit = TRUE, col = col, xlab = "imputation Number")
# Regression with imputed datasets
## linear regression for each imputed data set - 5 regression are run
fitm <- with(data = imp1, lm(equip_defensiv ~ morte_cov + contat_cov))
summary(fitm)
# R will estimate our regression model separately for each imputed dataset, 1 though 5. We then need to summarize or pool those estimates to get one overall set of parameter estimates.
## pool coefficients and standard errors across all 5 regression models
pool(fitm)
## output parameter estimates
summary(pool(fitm))
# Dataframe after imputation
base_imp <- subset(imp_tot2, select = c("gasto_equip_defensivo", "equip_defensiv", "idoso", "morte_cov", "idade","contat_cov", "result_teste_1", "teste_cov", "pgt_plano","data_plano", "plano", "filho_dep", "estcivil", "d.escolaridade","d.raca","raca", "sexo", "renda", "rendafam",   "qtd_filho_dep","confirmed", "deaths", "confirmed_per_100k_inhabitants"))
write.dta(base_imp, "covid_imp.dta")
write.dta(base_imp, "covid_basedados_imputado.dta")
library(haven)
covid_basedados_imputado <- read_dta("covid_basedados_imputado.dta")
View(covid_basedados_imputado)
stargazer(reg_gd, reg_ed_prob, reg_ed_logit, reg_ed_logit_sr, type = 'text')
reg_gd <- lm(gasto_equip_defensivo ~  + sexo + estcivil + morte_cov + contat_cov + filho_dep + idade + deaths + confirmed + d.raca + renda + d.escolaridade, data = base_cov)
View(baseampla2)
library(haven)
covid_basedados_imputado <- read_dta("covid_basedados_imputado.dta")
base_cov <- na.omit(covid_basedados_imputado)
library(foreign)
library(stargazer)
# Estou realizando as Regressoes com banco de dados imputado
# Estou testando diferentes conjunto de variaveis para o modelo.
# y = (equip_defensiv) = Comprou ou nao comprou equipamentos defensivo
teste1 <- glm(equip_defensiv ~ d.escolaridade + sexo + estcivil + morte_cov + contat_cov +  filho_dep + idade + raca + renda, data = base_cov, family = binomial(link = "probit"))
View(base_cov)
View(base_cov)
library(foreign)
library(stargazer)
# Estou realizando as Regressoes com banco de dados imputado
# Estou testando diferentes conjunto de variaveis para o modelo.
# y = (equip_defensiv) = Comprou ou nao comprou equipamentos defensivo
teste1 <- glm(equip_defensiv ~ d_escolaridade + sexo + estcivil + morte_cov + contat_cov +  filho_dep + idade + raca + renda, data = base_cov, family = binomial(link = "probit"))
teste2 <- glm(equip_defensiv ~ d_escolaridade + sexo + estcivil + morte_cov + contat_cov + qtd_filho_dep + filho_dep + idade +  raca, data = base_cov, family = binomial(link = "probit"))
teste3 <- glm(equip_defensiv ~ d_escolaridade + sexo + estcivil + morte_cov + contat_cov + qtd_filho_dep + filho_dep + idade, data = base_cov, family = binomial(link = "probit"))
teste4 <- glm(equip_defensiv ~ d_escolaridade + sexo + estcivil + morte_cov + contat_cov + qtd_filho_dep + filho_dep + idade, data = base_cov, family = binomial(link = "probit"))
teste5 <- glm(equip_defensiv ~ d_escolaridade + sexo + estcivil + morte_cov + contat_cov + qtd_filho_dep + filho_dep, data = base_cov, family = binomial(link = "probit"))
teste6 <- glm(equip_defensiv ~ d_escolaridade + sexo + estcivil + morte_cov + contat_cov + filho_dep, data = base_cov, family = binomial(link = "probit"))
teste7 <- glm(equip_defensiv ~ d_escolaridade + sexo + estcivil + morte_cov + contat_cov, data = base_cov, family = binomial(link = "probit"))
stargazer(teste1, teste2, teste3, teste4, teste5, teste6, teste7, type = 'text')
mqo_gef1 <- lm(gasto_equip_defensivo ~ d_escolaridade + sexo + estcivil + morte_cov + contat_cov + filho_dep + idade + raca + renda, data = base_cov)
mqo_gef2 <- lm(gasto_equip_defensivo ~ d_escolaridade + sexo + estcivil + morte_cov + contat_cov + filho_dep + idade + idoso + raca, data = base_cov)
mqo_gef3 <- lm(gasto_equip_defensivo ~ d_escolaridade + sexo + estcivil + morte_cov + contat_cov + qtd_filho_dep + filho_dep + idade + idoso, data = base_cov)
mqo_gef4 <- lm(gasto_equip_defensivo ~ d_escolaridade + sexo + estcivil + morte_cov + contat_cov + qtd_filho_dep + filho_dep + idade, data = base_cov)
mqo_gef5 <- lm(gasto_equip_defensivo ~ d_escolaridade + sexo + estcivil + morte_cov + contat_cov + qtd_filho_dep + filho_dep, data = base_cov)
mqo_gef6 <- lm(gasto_equip_defensivo ~ d_escolaridade + sexo + estcivil + morte_cov + contat_cov, data = base_cov)
mqo_gef7 <- lm(gasto_equip_defensivo ~ d_escolaridade + sexo + estcivil + morte_cov + contat_cov, data = base_cov)
stargazer(mqo_gef5, mqo_gef6, mqo_gef7, no.space=TRUE, type = 'text')
stargazer(mqo_gef1, mqo_gef2, mqo_gef3, no.space=TRUE, type = 'text')
reg_gd <- lm(gasto_equip_defensivo ~  + sexo + estcivil + morte_cov + contat_cov + filho_dep + idade + deaths + confirmed + d.raca + renda + d_escolaridade, data = base_cov)
library(stargazer)
reg_gd <- lm(gasto_equip_defensivo ~  + sexo + estcivil + morte_cov + contat_cov + filho_dep + idade + deaths + confirmed + d.raca + renda + d_escolaridade, data = base_cov)
library(stargazer)
reg_gd <- lm(gasto_equip_defensivo ~  + sexo + estcivil + morte_cov + contat_cov + filho_dep + idade + deaths + confirmed + d_raca + renda + d_escolaridade, data = base_cov)
summary(reg_gd)
reg_ed_prob <- glm(equip_defensiv ~ sexo + estcivil + morte_cov + contat_cov + filho_dep + idade + deaths + confirmed + d_raca + renda + d_escolaridade, data = base_cov, family = binomial(link = "probit"))
summary(reg_ed_prob)
reg_ed_logit <- glm(equip_defensiv ~ sexo + estcivil + morte_cov + contat_cov + filho_dep + idade + deaths + confirmed + d_raca + renda + d_escolaridade, data = base_cov, family = binomial(link = "logit"))
summary(reg_ed_logit)
reg_ed_logit_sr <- glm(equip_defensiv ~ sexo + estcivil + morte_cov + contat_cov + filho_dep + idade + deaths + confirmed, data = base_cov, family = binomial(link = "logit"))
summary(reg_ed_logit_sr)
stargazer(reg_gd, reg_ed_prob, reg_ed_logit, reg_ed_logit_sr, type = 'text')
library("margins")
library("datasets")
library("stargazer")
reg_ed_prob <- glm(equip_defensiv ~ sexo + estcivil + morte_cov + contat_cov + filho_dep + idade + deaths + confirmed + d_raca + renda + d_escolaridade, data = base_cov, family = binomial(link = "probit"))
summary(reg_ed_prob)
plot(margins(reg_ed_prob))
summary(margins(reg_ed_prob))
stargazer(reg_ed_prob, type = 'text')
rm(list())
rm(list=ls())
knitr::opts_chunk$set(echo = TRUE)
library(scales)
library(tidyverse)
library(magrittr)
library(utf8)
library(haven)
covid_basedados_imputado <- read_dta("C:/Users/User/Dropbox/Averting Expenditures Paper/rmd/dados_dta/covid_basedados_imputado.dta")
# Deixando a base sem NA's
base_cov <- na.omit(covid_basedados_imputado)
reg_gd <- lm(gasto_equip_defensivo ~  + sexo + estcivil + morte_cov + contat_cov + filho_dep + idade + deaths + confirmed + d_raca + renda + d_escolaridade, data = base_cov)
summary(reg_gd)
reg_ed_prob <- glm(equip_defensiv ~ sexo + estcivil + morte_cov + contat_cov + filho_dep + idade + deaths + confirmed + d_raca + renda + d_escolaridade, data = base_cov, family = binomial(link = "probit"))
summary(reg_ed_prob)
reg_ed_logit <- glm(equip_defensiv ~ sexo + estcivil + morte_cov + contat_cov + filho_dep + idade + deaths + confirmed + d_raca + renda + d_escolaridade, data = base_cov, family = binomial(link = "logit"))
summary(reg_ed_logit)
reg_ed_logit_sr <- glm(equip_defensiv ~ sexo + estcivil + morte_cov + contat_cov + filho_dep + idade + deaths + confirmed, data = base_cov, family = binomial(link = "logit"))
summary(reg_ed_logit_sr)
library("margins")
library("datasets")
library("stargazer")
reg_ed_prob <- glm(equip_defensiv ~ sexo + estcivil + morte_cov + contat_cov + filho_dep + idade + deaths + confirmed + d_raca + renda + d_escolaridade, data = base_cov, family = binomial(link = "probit"))
confint(reg_ed_prob)
library(aod)
wald.test(b = coef(reg_ed_prob), Sigma = vcov(reg_ed_prob), Terms = 7:11)
reg_ed_prob0 <- update(reg_ed_prob, formula= equip_defensiv ~ 1)   # Calcula o LL mantendo Y constante.
McFadden<- 1-as.vector(logLik(reg_ed_prob)/logLik(reg_ed_prob0))
McFadden
library(rsq)
reg_ed_prob <- glm(equip_defensiv ~ sexo + estcivil + morte_cov + contat_cov + filho_dep + idade + deaths + confirmed + d_raca + renda + d_escolaridade, data = base_cov, family = binomial(link = "probit"))
summary(reg_ed_prob)
rsq(reg_ed_prob, adj = FALSE, type = 'lr')
rsq(reg_ed_prob,adj=TRUE)
## change in deviance
with(reg_ed_prob, null.deviance - deviance)
## change in degrees of freedom
with(reg_ed_prob, df.null - df.residual)
## chi square test p-value
with(reg_ed_prob, pchisq(null.deviance - deviance, df.null - df.residual, lower.tail = FALSE))
logLik(reg_ed_prob)
library("ROCR")
m1 <- glm(equip_defensiv ~ sexo + estcivil + morte_cov + contat_cov + filho_dep + idade + deaths + confirmed + d_raca + renda + d_escolaridade, control = glm.control(maxit=100, trace=FALSE), data = base_cov, family = binomial(link = "probit"))
summary(m1)
m1preds <- predict(m1, type= "response")
class(m1preds)
str(m1preds)
m1.predict <- prediction(m1preds, base_cov$equip_defensiv)
m1preds <- predict(m1, type= "response")
class(m1preds)
str(m1preds)
m1.predict <- prediction(m1preds, base_cov$equip_defensiv)
m1.predict <- prediction(m1preds, base_cov$equip_defensiv)
class(equip_defensiv)
class(base_cov$equip_defensiv)
class(base_cov$sexo)
class(base_cov$equip_defensiv)
class(base_cov$sexo)
class(base_cov$estcivil)
class(base_cov$morte_cov)
class(base_cov$contat_cov)
class(base_cov$filho_dep)
class(base_cov$idade)
class(base_cov$deaths)
class(base_cov$confirmed)
class(base_cov$d_raca)
class(base_cov$renda)
class(base_cov$d_escolaridade)
m1.predict <- prediction(m1preds, base_cov$equip_defensiv)
m1.predict <- prediction(m1preds[,2], base_cov$equip_defensiv[,2])
m1.predict <- prediction(m1preds[,1], base_cov$equip_defensiv[,1])
m1preds <- predict(m1, type= "response")
class(m1preds)
str(m1preds)
m1.predict <- prediction(m1preds, base_cov$equip_defensiv)
reg_ed_prob <- glm(equip_defensiv ~ sexo + estcivil + morte_cov + contat_cov + filho_dep + idade + deaths + confirmed + d_raca + renda + d_escolaridade, data = base_cov, family = binomial(link = "probit"))
summary(reg_ed_prob)
reg_ed_prob_2 <- glm(equip_defensiv ~ sexo + estcivil + morte_cov + contat_cov + filho_dep + idade + deaths + confirmed + renda + d_escolaridade, data = base_cov, family = binomial(link = "probit"))
summary(reg_ed_prob_2)
reg_ed_prob_3 <- glm(equip_defensiv ~ sexo + estcivil + morte_cov + contat_cov + filho_dep + idade + deaths + confirmed + d_escolaridade, data = base_cov, family = binomial(link = "probit"))
summary(reg_ed_prob_3)
reg_ed_prob_4 <- glm(equip_defensiv ~ sexo + estcivil + morte_cov + contat_cov + filho_dep + deaths + confirmed + d_escolaridade, data = base_cov, family = binomial(link = "probit"))
summary(reg_ed_prob_4)
reg_ed_prob_5 <- glm(equip_defensiv ~ sexo + estcivil + morte_cov + contat_cov + idade + deaths + confirmed + d_escolaridade, data = base_cov, family = binomial(link = "probit"))
summary(reg_ed_prob_5)
reg_ed_prob_6 <- glm(equip_defensiv ~ sexo + estcivil + morte_cov + contat_cov + deaths + confirmed + d_escolaridade, data = base_cov, family = binomial(link = "probit"))
summary(reg_ed_prob_6)
stargazer(reg_ed_prob, reg_ed_prob_2, reg_ed_prob_3, reg_ed_prob_4, reg_ed_prob_5, reg_ed_prob_6, type = 'text')
wald.test(b = coef(reg_ed_prob_6), Sigma = vcov(reg_ed_prob_6), Terms = 7:11)
library(aod)
wald.test(b = coef(reg_ed_prob_6), Sigma = vcov(reg_ed_prob_6), Terms = 7:11)
wald.test(b = coef(reg_ed_prob_6), Sigma = vcov(reg_ed_prob_6), Terms = 5:7)
wald.test(b = coef(reg_ed_prob_6), Sigma = vcov(reg_ed_prob_6), Terms = 4:7)
# McFadden's Pseudo R-squared
reg_ed_prob0 <- update(reg_ed_prob_6, formula= equip_defensiv ~ 1)   # Calcula o LL mantendo Y constante.
McFadden<- 1-as.vector(logLik(reg_ed_prob_6)/logLik(reg_ed_prob_6))
McFadden
McFadden<- 1-as.vector(logLik(reg_ed_prob_6)/logLik(reg_ed_prob_60))
McFadden<- 1-as.vector(logLik(reg_ed_prob_6)/logLik(reg_ed_prob_60))
McFadden<- 1-as.vector(logLik(reg_ed_prob_6)/logLik(reg_ed_prob0))
McFadden
library(haven)
# chamando base sem imputacoes
covid_full <- read_dta("C:/Users/User/Dropbox/Averting Expenditures Paper/rmd/dados_rob/covid_full1.dta")
# chamando base com imputacoes
covid_imp_rob <- read_dta("C:/Users/User/Dropbox/Averting Expenditures Paper/rmd/dados_rob/covid_basedados_imputado1.dta")
library(sampleSelection)
# melhor modelo ate aqui
heck_cov1 = heckit(
selection = equip_defensiv ~ sexo + morte_cov + estcivil,
outcome = lngastos ~ sexo  + idade + d_raca +lndeaths +
filho_dep + lnrenda,
data = covid_imp_rob,
method = "2step"
)
summary(heck_cov1)
heck_cov2 = heckit(
selection = equip_defensiv ~ sexo + morte_cov + estcivil,
outcome = lngastos ~ sexo + morte_cov + contat_cov + filho_dep + idade + d_raca + lnrenda + d_escolaridade,
data = covid_imp_rob,
method = "2step"
)
heck_cov3 = heckit(
selection = equip_defensiv ~ sexo + morte_cov + estcivil,
outcome = lngastos ~ sexo + morte_cov + contat_cov + filho_dep + idade + d_raca + lnrenda + d_escolaridade,
data = covid_full,
method = "2step"
)
heck_cov4 = heckit(
selection = equip_defensiv ~ sexo + morte_cov + estcivil,
outcome = lngastos ~ sexo + morte_cov + contat_cov + filho_dep + idade + d_raca + lnrenda + d_escolaridade,
data = covid_full,
method = "2step"
)
summary(heck_cov1)
heck_cov2 = heckit(
selection = equip_defensiv ~ sexo + morte_cov + estcivil,
outcome = lngastos ~ sexo + morte_cov + contat_cov + filho_dep + idade + d_raca + lnrenda + d_escolaridade,
data = covid_imp_rob,
method = "2step"
)
heck_cov3 = heckit(
selection = equip_defensiv ~ sexo + morte_cov + estcivil,
outcome = lngastos ~ sexo + morte_cov + contat_cov + filho_dep + idade + d_raca + lnrenda + d_escolaridade,
data = covid_full,
method = "2step"
)
heck_cov4 = heckit(
selection = equip_defensiv ~ sexo + morte_cov + estcivil,
outcome = lngastos ~ sexo + morte_cov + contat_cov + filho_dep + idade + d_raca + lnrenda + d_escolaridade,
data = covid_full,
method = "2step"
)
library(stargazer)
stargazer(heck_cov1, heck_cov2, heck_cov3, heck_cov4, type = 'text')
summary(heck_cov1)
summary(heck_cov1)
summary(heck_cov2)
stargazer(heck_cov1, heck_cov2, heck_cov3, heck_cov4, type = 'text')
library(mice)
library(haven)
baseampla1 <- read_dta("baseampla1.dta")
?mice
library(mice)
?mice
library(scales)
library(tidyverse)
library(magrittr)
library(utf8)
library(geobr)
library(readxl)
library(mice)
library(VIM)
library(lattice)
library(foreign)
setwd("C:/Users/User/Dropbox/Averting Expenditures Paper/rmd/dados_dta")
library(haven)
covid_full <- read_dta("covid_full.dta")
## missing data patterns
md.pattern(covid_full)
mice_plot <- aggr(covid_full, col=c('navyblue','yellow'),
numbers=TRUE, sortVars=TRUE,
labels=names(iris.mis), cex.axis=.7,
gap=3, ylab=c("Missing data","Pattern"))
mice_plot <- aggr(iris.mis, col=c('navyblue','yellow'),
numbers=TRUE, sortVars=TRUE,
labels=names(iris.mis), cex.axis=.7,
gap=3, ylab=c("Missing data","Pattern"))
library(VIM)
mice_plot <- aggr(iris.mis, col=c('navyblue','yellow'),
numbers=TRUE, sortVars=TRUE,
labels=names(iris.mis), cex.axis=.7,
gap=3, ylab=c("Missing data","Pattern"))
attach(iris.mis)
md.pattern(iris.mis)
#load data
> data <- iris
#load data
data <- iris
View(data)
View(data)
summary(iris)
#Generate 10% missing values at Random
iris.mis <- prodNA(iris, noNA = 0.1)
#Generate 10% missing values at Random
iris.mis <- prodNA(iris, noNA = 0.1)
?prodNA
install.packages(missForest)
install.packages("missForest")
library(missForest)
iris.mis <- prodNA(iris, noNA = 0.1)
#Check missing values introduced in the data
summary(iris.mis)
#remove categorical variables
iris.mis <- subset(iris.mis, select = -c(Species))
summary(iris.mis)
md.pattern(iris.mis)
mice_plot <- aggr(iris.mis, col=c('navyblue','yellow'),
numbers=TRUE, sortVars=TRUE,
labels=names(iris.mis), cex.axis=.7,
gap=3, ylab=c("Missing data","Pattern"))
View(covid_full)
View(covid_full)
covid_1 <- subset(covid_full, select = -c(Species, escolaridade, raca, raca_1))
#remove categorical variables
covid_1 <- subset(covid_full, select = -c(escolaridade, raca, raca_1))
View(covid_1)
View(covid_1)
# checando padrão de missing values
md.pattern(covid_1)
mice_plot <- aggr(covid_1, col=c('navyblue','yellow'),
numbers=TRUE, sortVars=TRUE,
labels=names(iris.mis), cex.axis=.7,
gap=3, ylab=c("Missing data","Pattern"))
mice_plot <- aggr(covid_1, col=c('navyblue','yellow'),
numbers=TRUE, sortVars=TRUE,
labels=names(covid_1), cex.axis=.7,
gap=3, ylab=c("Missing data","Pattern"))
#remove categorical variables
covid_1 <- subset(covid_full, select = -c(escolaridade, rendafam, raca, raca_1, result_test_1))
covid_full <- read_dta("covid_full.dta")
#remove categorical variables
covid_1 <- subset(covid_full, select = -c(escolaridade, rendafam, raca, raca_1, result_test_1))
#remove categorical variables
covid_1 <- subset(covid_full, select = -c(escolaridade, rendafam, raca, raca_1, result_teste_1))
# checando padrão de missing values
md.pattern(covid_1)
mice_plot <- aggr(covid_1, col=c('navyblue','yellow'),
numbers=TRUE, sortVars=TRUE,
labels=names(covid_1), cex.axis=.7,
gap=3, ylab=c("Missing data","Pattern"))
# checando padrão de missing values
md.pattern(covid_1[,1:10])
mice_plot <- aggr(covid_1, col=c('navyblue','yellow'),
numbers=TRUE, sortVars=TRUE,
labels=names(covid_1), cex.axis=.7,
gap=3, ylab=c("Missing data","Pattern"))
# checando padrão de missing values
md.pattern(covid_1[,c(1:10)])
mice_plot <- aggr(covid_1[,c(1:10)], col=c('navyblue','yellow'),
numbers=TRUE, sortVars=TRUE,
labels=names(covid_1), cex.axis=.7,
gap=3, ylab=c("Missing data","Pattern"))
# checando padrão de missing values
md.pattern(covid_1[,c(1:6)])
mice_plot <- aggr(covid_1[,c(1:6)], col=c('navyblue','yellow'),
numbers=TRUE, sortVars=TRUE,
labels=names(covid_1), cex.axis=.7,
gap=3, ylab=c("Missing data","Pattern"))
# checando padrão de missing values
md.pattern(covid_1)
mice_plot <- aggr(covid_1, col=c('navyblue','yellow'),
numbers=TRUE, sortVars=TRUE,
labels=names(covid_1), cex.axis=.7,
gap=3, ylab=c("Missing data","Pattern"))
View(covid_1)
View(covid_1)
imputed_Data <- mice(covid_1, m=5, maxit = 50, method = 'pmm', seed = 500)
View(imputed_Data)
View(imputed_Data)
summary(imputed_Data)
#check imputed values
imputed_Data$imp$morte_cov
# get complete data ( 2nd out of 5)
completeData <- complete(imputed_Data,2)
View(completeData)
View(completeData)
md.pattern(completeData)
completeData <- complete(imputed_Data)
completeData <- complete(imputed_Data,5)
View(completeData)
View(completeData)
completeData <- complete(imputed_Data,2)
#remove categorical variables
covid.miss <- subset(covid_full, select = -c(escolaridade, rendafam, raca, raca_1, result_teste_1))
# checando padrão de missing values
md.pattern(covid.miss)
# plotando distribuicao dos missing values
mice_plot <- aggr(covid.miss, col=c('navyblue','yellow'),
numbers=TRUE, sortVars=TRUE,
labels=names(covid.miss), cex.axis=.7,
gap=3, ylab=c("Missing data","Pattern"))
# realizando imputacao dos dados
imputed_Data <- mice(covid.miss, m=5, maxit = 50, method = 'pmm', seed = 500)
summary(imputed_Data)
imputed_Data$imp$morte_cov
completeData <- complete(imputed_Data,2)
View(completeData)
View(completeData)
#build predictive model
fit <- with(data = covid.miss, exp = lm(gasto_equip_defensiv ~ idade + sexo + morte_cov))
#build predictive model
fit <- with(data = covid.miss, exp = lm(gasto_equip_defensivo ~ idade + sexo + morte_cov))
summary(fit)
#combine results of all 5 models
combine <- pool(fit)
summary(combine)
# Imputation Diagnostic Checks
# The first three observation were missing information for equip_defensiv.
imputed_Data$imp$contat_cov
# Combining imp_dataset with observed data set
imputed_Data2 <- complete(imputed_Data, "long", inc = TRUE)
View(imputed_Data2)
View(imputed_Data2)
## labels observed data in blue and imputed data in red for y1
col <- rep(c("blue", "red")[1 + as.numeric(is.na(imputed_Data$data$contat_cov))], 6)
## plots data for y1 by imputation
stripplot(contat_cov ~ .imp, data = imputed_Data2, jit = TRUE, col = col, xlab = "imputation Number")
## linear regression for each imputed data set - 5 regression are run
fitm <- with(data = imputed_Data, lm(gasto_equip_defensivo ~ morte_cov + contat_cov))
summary(fitm)
## pool coefficients and standard errors across all 5 regression models
pool(fitm)
## output parameter estimates
summary(pool(fitm))
## pool coefficients and standard errors across all 5 regression models
pool(fitm)
?pool
View(imputed_Data2)
View(imputed_Data2)
library(sampleSelection)
library(sampleSelection)
# melhor modelo ate aqui
heck_cov1 = heckit(
selection = equip_defensiv ~ sexo + morte_cov + estcivil,
outcome = lngastos ~ sexo  + idade + d_raca +lndeaths +
filho_dep + lnrenda,
data = imputed_Data2,
method = "2step"
)
summary(heck_cov1)
heck_cov2 = heckit(
selection = equip_defensiv ~ sexo + morte_cov + estcivil,
outcome = lngastos ~ sexo + morte_cov + contat_cov + filho_dep + idade + d_raca + lnrenda + d_escolaridade,
data = imputed_Data2,
method = "2step"
)
heck_cov3 = heckit(
selection = equip_defensiv ~ sexo + morte_cov + estcivil,
outcome = lngastos ~ sexo + morte_cov + contat_cov + filho_dep + idade + d_raca + lnrenda + d_escolaridade,
data = imputed_Data2,
method = "2step"
)
heck_cov4 = heckit(
selection = equip_defensiv ~ sexo + morte_cov + estcivil,
outcome = lngastos ~ sexo + morte_cov + contat_cov + filho_dep + idade + d_raca + lnrenda + d_escolaridade,
data = imputed_Data2,
method = "2step"
)
View(imputed_Data2)
View(imputed_Data2)
# melhor modelo ate aqui
heck_cov1 = heckit(
selection = equip_defensiv ~ sexo + morte_cov + estcivil,
outcome = gasto_equip_devensivo ~ sexo  + idade + d_raca +lndeaths +
filho_dep + lnrenda,
data = imputed_Data2,
method = "2step"
)
# melhor modelo ate aqui
heck_cov1 = heckit(
selection = equip_defensiv ~ sexo + morte_cov + estcivil,
outcome = gasto_equip_defensivo ~ sexo  + idade + d_raca +lndeaths +
filho_dep + lnrenda,
data = imputed_Data2,
method = "2step"
)
# melhor modelo ate aqui
heck_cov1 = heckit(
selection = equip_defensiv ~ sexo + morte_cov + estcivil,
outcome = gasto_equip_defensivo ~ sexo  + idade + d_raca +deaths +
filho_dep + lnrenda,
data = imputed_Data2,
method = "2step"
)
# melhor modelo ate aqui
heck_cov1 = heckit(
selection = equip_defensiv ~ sexo + morte_cov + estcivil,
outcome = gasto_equip_defensivo ~ sexo  + idade + d_raca +deaths +
filho_dep + renda,
data = imputed_Data2,
method = "2step"
)
# melhor modelo ate aqui
heck_cov1 = heckit(
selection = equip_defensiv ~ sexo + morte_cov + estcivil,
outcome = gasto_equip_defensivo ~ sexo  + idade + d_raca +deaths +
filho_dep + renda,
data = imputed_Data2,
method = "2step"
)
summary(heck_cov1)
heck_cov2 = heckit(
selection = equip_defensiv ~ sexo + morte_cov + estcivil,
outcome = gasto_equip_defensivo ~ sexo + morte_cov + contat_cov + filho_dep + idade + d_raca + renda + d_escolaridade,
data = imputed_Data2,
method = "2step"
)
heck_cov3 = heckit(
selection = equip_defensiv ~ sexo + morte_cov + estcivil,
outcome = gasto_equip_defensivo ~ sexo + morte_cov + contat_cov + filho_dep + idade + d_raca + renda + d_escolaridade,
data = imputed_Data2,
method = "2step"
)
heck_cov4 = heckit(
selection = equip_defensiv ~ sexo + morte_cov + estcivil,
outcome = gasto_equip_defensivo ~ sexo + morte_cov + contat_cov + filho_dep + idade + d_raca + renda + d_escolaridade,
data = imputed_Data2,
method = "2step"
)
library(stargazer)
stargazer(heck_cov1, heck_cov2, heck_cov3, heck_cov4, type = 'text')
stargazer(heck_cov1, heck_cov2, heck_cov3, heck_cov4, type = 'text')
summary(heck_cov2)
summary(heck_cov1)
stargazer(heck_cov1, heck_cov2, heck_cov3, heck_cov4, type = 'text')
summary(heck_cov4)
